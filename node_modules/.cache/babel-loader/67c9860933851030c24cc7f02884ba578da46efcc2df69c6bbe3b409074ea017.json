{"ast":null,"code":"function areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n  for (var i = 0; i < newInputs.length; i++) {\n    if (newInputs[i] !== lastInputs[i]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction index(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = areInputsEqual;\n  }\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n  return result;\n}\nexport default index;","map":{"version":3,"names":["areInputsEqual","newInputs","lastInputs","length","i","index","resultFn","isEqual","lastThis","lastArgs","lastResult","calledOnce","result","_len","arguments","newArgs","Array","_key","apply"],"sources":["C:/Users/mario/Documents/GitHub/React-resort-websit/node_modules/memoize-one/dist/memoize-one.esm.js"],"sourcesContent":["function areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n\n  for (var i = 0; i < newInputs.length; i++) {\n    if (newInputs[i] !== lastInputs[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = areInputsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n"],"mappings":"AAAA,SAASA,cAAcA,CAACC,SAAS,EAAEC,UAAU,EAAE;EAC7C,IAAID,SAAS,CAACE,MAAM,KAAKD,UAAU,CAACC,MAAM,EAAE;IAC1C,OAAO,KAAK;EACd;EAEA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,SAAS,CAACE,MAAM,EAAEC,CAAC,EAAE,EAAE;IACzC,IAAIH,SAAS,CAACG,CAAC,CAAC,KAAKF,UAAU,CAACE,CAAC,CAAC,EAAE;MAClC,OAAO,KAAK;IACd;EACF;EAEA,OAAO,IAAI;AACb;AAEA,SAASC,KAAKA,CAAEC,QAAQ,EAAEC,OAAO,EAAE;EACjC,IAAIA,OAAO,KAAK,KAAK,CAAC,EAAE;IACtBA,OAAO,GAAGP,cAAc;EAC1B;EAEA,IAAIQ,QAAQ;EACZ,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,UAAU;EACd,IAAIC,UAAU,GAAG,KAAK;EAEtB,IAAIC,MAAM,GAAG,SAASA,MAAMA,CAAA,EAAG;IAC7B,KAAK,IAAIC,IAAI,GAAGC,SAAS,CAACX,MAAM,EAAEY,OAAO,GAAG,IAAIC,KAAK,CAACH,IAAI,CAAC,EAAEI,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGJ,IAAI,EAAEI,IAAI,EAAE,EAAE;MAC1FF,OAAO,CAACE,IAAI,CAAC,GAAGH,SAAS,CAACG,IAAI,CAAC;IACjC;IAEA,IAAIN,UAAU,IAAIH,QAAQ,KAAK,IAAI,IAAID,OAAO,CAACQ,OAAO,EAAEN,QAAQ,CAAC,EAAE;MACjE,OAAOC,UAAU;IACnB;IAEAA,UAAU,GAAGJ,QAAQ,CAACY,KAAK,CAAC,IAAI,EAAEH,OAAO,CAAC;IAC1CJ,UAAU,GAAG,IAAI;IACjBH,QAAQ,GAAG,IAAI;IACfC,QAAQ,GAAGM,OAAO;IAClB,OAAOL,UAAU;EACnB,CAAC;EAED,OAAOE,MAAM;AACf;AAEA,eAAeP,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}