{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mario\\\\Documents\\\\GitHub\\\\React-resort-websit\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport items from './data';\n// import Client from './Contentful';\n\nconst RoomContext = /*#__PURE__*/React.createContext();\n// <RoomContext.Provider value={'hello'}\nclass RoomProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rooms: [],\n      sortedRooms: [],\n      featuredRooms: [],\n      loading: true,\n      type: 'all',\n      capacity: 1,\n      price: 0,\n      maxPrice: 0,\n      minPrice: 0,\n      maxSize: 0,\n      minSize: 0,\n      breakfast: false,\n      pets: false\n    };\n    this.getRoom = slug => {\n      let tempRooms = [...this.state.rooms];\n      const room = tempRooms.find(room => room.slug === slug);\n      return room;\n    };\n    this.handleChange = event => {\n      const target = event.target;\n      const value = target.type === 'checkbox' ? target.checked : target.value;\n      const name = event.target.name;\n      this.setState({\n        [name]: value\n      }, this.filterRooms);\n    };\n    this.filterRooms = () => {\n      // console.log(\"hello filterRooms\");\n      let {\n        rooms,\n        type,\n        capacity,\n        price,\n        minSize,\n        maxSize,\n        breakfast,\n        pets\n      } = this.state;\n\n      //all the rooms\n      let tempRooms = [...rooms];\n\n      // transform value\n      capacity = parseInt(capacity);\n      price = parseInt(price);\n\n      // filter by type\n      if (type !== \"all\") {\n        tempRooms = tempRooms.filter(room => room.type === type);\n      }\n\n      // filter by capacity\n      if (capacity !== 1) {\n        tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n      }\n\n      // filter by price\n      tempRooms = tempRooms.filter(room => room.price <= price);\n\n      //  filter by size\n      tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize);\n\n      //  filter by breakfast\n      if (breakfast) {\n        tempRooms = tempRooms.filter(room => room.breakfast === true);\n      }\n\n      //  filter by pets\n      if (pets) {\n        tempRooms = tempRooms.filter(room => room.pets === true);\n      }\n\n      // change state\n      this.setState({\n        sortedRooms: tempRooms\n      });\n    };\n  }\n  // getData from contentful\n\n  // getData = async () => {\n  //     try {\n  //         let response = await Client.getEntries({\n  //             content_type : \"beachResortRoom\",\n  //             // order: \"sys.createdAt\"\n  //             order: \"fields.price\"\n  //             // order: \"-fields.price\"\n  //         });\n  //     let rooms = this.formatData(response.items);\n  //     let featuredRooms = rooms.filter(room => room.featured === true);\n  //     let maxPrice = Math.max(...rooms.map(item => item.price));\n  //     let maxSize = Math.max(...rooms.map(item => item.size));\n\n  //     this.setState({\n  //         rooms,\n  //         featuredRooms,\n  //         sortedRooms: rooms,\n  //         loading: false,\n  //         price: maxPrice,\n  //         maxPrice,\n  //         maxSize\n  //     });\n  //     } catch (error) {\n  //         console.log(error);\n  //     }\n  // };\n\n  componentDidMount() {\n    // this.getData();\n\n    let rooms = this.formatData(items);\n    // console.log(rooms);\n    let featuredRooms = rooms.filter(room => room.featured === true);\n    let maxPrice = Math.max(...rooms.map(item => item.price));\n    // console.log(maxPrice);\n    let maxSize = Math.max(...rooms.map(item => item.size));\n    // console.log(maxSize);\n\n    this.setState({\n      rooms,\n      featuredRooms,\n      sortedRooms: rooms,\n      loading: false,\n      price: maxPrice,\n      maxPrice,\n      maxSize\n    });\n  }\n  formatData(itemsResort) {\n    let tempItemps = itemsResort.map(item => {\n      let id = item.sys.id;\n      let images = item.fields.images.map(image => image.fields.file.url);\n      let room = {\n        ...item.fields,\n        images,\n        id\n      };\n      return room;\n    });\n    return tempItemps;\n  }\n  render() {\n    return /*#__PURE__*/React.createElement(RoomContext.Provider, {\n      value: {\n        ...this.state,\n        getRoom: this.getRoom,\n        handleChange: this.handleChange\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n}\nconst RoomConsumer = RoomContext.Consumer;\nexport function withRoomConsumer(Component) {\n  return function ConsumerWrapper(props) {\n    return /*#__PURE__*/React.createElement(RoomConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 16\n      }\n    }, value => /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      context: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    })));\n  };\n}\nexport { RoomProvider, RoomConsumer, RoomContext };","map":{"version":3,"names":["React","Component","items","RoomContext","createContext","RoomProvider","constructor","args","state","rooms","sortedRooms","featuredRooms","loading","type","capacity","price","maxPrice","minPrice","maxSize","minSize","breakfast","pets","getRoom","slug","tempRooms","room","find","handleChange","event","target","value","checked","name","setState","filterRooms","parseInt","filter","size","componentDidMount","formatData","featured","Math","max","map","item","itemsResort","tempItemps","id","sys","images","fields","image","file","url","render","createElement","Provider","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","props","children","RoomConsumer","Consumer","withRoomConsumer","ConsumerWrapper","Object","assign","context"],"sources":["C:/Users/mario/Documents/GitHub/React-resort-websit/src/context.js"],"sourcesContent":["import React, { Component } from 'react';\nimport items from './data';\n// import Client from './Contentful';\n\n\n\n\nconst RoomContext = React.createContext();\n// <RoomContext.Provider value={'hello'}\nclass RoomProvider extends Component {\n    state = {\n        rooms: [],\n        sortedRooms: [],\n        featuredRooms: [],\n        loading: true,\n        type: 'all',\n        capacity: 1,\n        price: 0,\n        maxPrice: 0,\n        minPrice: 0,\n        maxSize: 0,\n        minSize: 0,\n        breakfast: false,\n        pets: false,\n    };\n    // getData from contentful\n\n    // getData = async () => {\n    //     try {\n    //         let response = await Client.getEntries({\n    //             content_type : \"beachResortRoom\",\n    //             // order: \"sys.createdAt\"\n    //             order: \"fields.price\"\n    //             // order: \"-fields.price\"\n    //         });\n    //     let rooms = this.formatData(response.items);\n    //     let featuredRooms = rooms.filter(room => room.featured === true);\n    //     let maxPrice = Math.max(...rooms.map(item => item.price));\n    //     let maxSize = Math.max(...rooms.map(item => item.size));\n\n    //     this.setState({\n    //         rooms,\n    //         featuredRooms,\n    //         sortedRooms: rooms,\n    //         loading: false,\n    //         price: maxPrice,\n    //         maxPrice,\n    //         maxSize\n    //     });\n    //     } catch (error) {\n    //         console.log(error);\n    //     }\n    // };\n\n        componentDidMount() {\n            // this.getData();\n\n            let rooms = this.formatData(items);\n            // console.log(rooms);\n            let featuredRooms = rooms.filter(room => room.featured === true);\n            let maxPrice = Math.max(...rooms.map(item => item.price));\n            // console.log(maxPrice);\n            let maxSize = Math.max(...rooms.map(item => item.size));\n            // console.log(maxSize);\n\n            this.setState({\n                rooms,\n                featuredRooms,\n                sortedRooms: rooms,\n                loading: false,\n                price: maxPrice,\n                maxPrice,\n                maxSize,\n            });\n\n        }\n\n        formatData(itemsResort){\n            let tempItemps = itemsResort.map(item => {\n                let id = item.sys.id\n                let images = item.fields.images.map(image => image.fields.file.url);\n                let room ={ ...item.fields,images,id }; \n                return room;\n            });\n            return tempItemps;\n        }\n\n        getRoom = slug => {\n            let tempRooms = [...this.state.rooms];\n            const room = tempRooms.find(room => room.slug === slug);\n            return room;\n        };\n\n    handleChange = event => {\n        const target = event.target;\n        const value = target.type === 'checkbox'? target.checked : target.value;\n        const name = event.target.name;\n\n        this.setState(\n            {\n                [name] : value\n            },\n            this.filterRooms\n        );   \n    };\n\n    filterRooms = () => {\n        // console.log(\"hello filterRooms\");\n        let {\n            rooms,\n            type,\n            capacity,\n            price,\n            minSize,\n            maxSize,\n            breakfast,\n            pets\n        } = this.state;\n\n        //all the rooms\n        let tempRooms = [...rooms];\n\n        // transform value\n        capacity = parseInt(capacity);\n        price = parseInt(price);\n\n\n        // filter by type\n        if (type !== \"all\") {\n            tempRooms = tempRooms.filter(room => room.type === type);\n        }\n\n        // filter by capacity\n        if (capacity !== 1) {\n            tempRooms = tempRooms.filter(room => room.capacity >= capacity);\n        }\n\n        // filter by price\n        tempRooms = tempRooms.filter(room => room.price <= price);\n\n        //  filter by size\n        tempRooms = tempRooms.filter(room => room.size >= minSize && room.size <= maxSize);\n\n        //  filter by breakfast\n        if (breakfast) {\n            tempRooms = tempRooms.filter(room => room.breakfast === true);\n        }\n\n        //  filter by pets\n        if (pets) {\n            tempRooms = tempRooms.filter(room => room.pets === true);\n        }\n\n        // change state\n        this.setState({\n            sortedRooms: tempRooms\n        });\n    };\n\n    render() {\n        return (\n            <RoomContext.Provider value={{\n                ...this.state,\n                getRoom: this.getRoom,\n                handleChange: this.handleChange\n                }}> \n                {this.props.children}\n            </RoomContext.Provider>\n        );\n    }\n}\n\nconst RoomConsumer = RoomContext.Consumer;\n\nexport function withRoomConsumer(Component){\n    return function ConsumerWrapper(props){\n        return <RoomConsumer>\n            {value => <Component {...props} context={value} />}\n        </RoomConsumer>\n    }\n}\n\nexport {RoomProvider, RoomConsumer, RoomContext};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}